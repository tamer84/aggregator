version: 0.2

phases:
  install:
    runtime-versions:
      docker: 19
    commands:
      - nohup /usr/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 &
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
      - export CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain tango --domain-owner 802306197541 --query authorizationToken --output text`
  build:
    commands:
      - echo Build started on `date`
      - echo Building code...
      - ./mvnw -B clean package
      - echo "version- $(mvn help:evaluate -Dexpression=project.version -q -DforceStdout) hash- $(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-5)"
      - echo Building the Docker image...
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - printf '[{"name":"%s","imageUri":"%s"}]' $IMAGE_REPO_NAME $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG > $ARTIFACT_NAME
      - ./run.sh
artifacts:
  files: $ARTIFACT_NAME
